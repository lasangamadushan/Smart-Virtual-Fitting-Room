  SmartVFR.cpp
C:\Program Files\PCL 1.8.0\3rdParty\FLANN\include\flann/util/serialization.h(363): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.14393.0\ucrt\stdio.h(207): note: see declaration of 'fopen'
C:\Program Files\PCL 1.8.0\3rdParty\FLANN\include\flann/util/serialization.h(407): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.14393.0\ucrt\stdio.h(207): note: see declaration of 'fopen'
C:\Program Files\PCL 1.8.0\3rdParty\FLANN\include\flann/util/saving.h(65): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.14393.0\ucrt\string.h(129): note: see declaration of 'strcpy'
C:\Program Files\PCL 1.8.0\3rdParty\FLANN\include\flann/util/saving.h(67): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.14393.0\ucrt\string.h(129): note: see declaration of 'strcpy'
C:\Program Files\PCL 1.8.0\3rdParty\FLANN\include\flann/util/logger.h(66): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.14393.0\ucrt\stdio.h(207): note: see declaration of 'fopen'
C:\Users\Lasanga Madushan\Desktop\SmartVFR\SmartVFR.cpp(215): warning C4552: '+': operator has no effect; expected operator with side-effect
C:\Users\Lasanga Madushan\Desktop\SmartVFR\SmartVFR.cpp(216): warning C4552: '+': operator has no effect; expected operator with side-effect
C:\Users\Lasanga Madushan\Desktop\SmartVFR\SmartVFR.cpp(217): warning C4552: '+': operator has no effect; expected operator with side-effect
C:\Users\Lasanga Madushan\Desktop\SmartVFR\SmartVFR.cpp(218): warning C4552: '+': operator has no effect; expected operator with side-effect
C:\Users\Lasanga Madushan\Desktop\SmartVFR\SmartVFR.cpp(219): warning C4552: '+': operator has no effect; expected operator with side-effect
C:\Users\Lasanga Madushan\Desktop\SmartVFR\SmartVFR.cpp(220): warning C4552: '+': operator has no effect; expected operator with side-effect
C:\Users\Lasanga Madushan\Desktop\SmartVFR\SmartVFR.cpp(395): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Users\Lasanga Madushan\Desktop\SmartVFR\SmartVFR.cpp(414): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/impl/point_cloud_color_handlers.hpp(549): warning C4267: 'argument': conversion from 'size_t' to 'unsigned int', possible loss of data
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/impl/point_cloud_color_handlers.hpp(525): note: while compiling class template member function 'bool pcl::visualization::PointCloudColorHandlerLabelField<pcl::PointXYZL>::getColor(vtkSmartPointer<vtkDataArray> &) const'
  C:\Program Files\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(907): note: see reference to class template instantiation 'pcl::visualization::PointCloudColorHandlerLabelField<pcl::PointXYZL>' being compiled
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(102): note: see declaration of 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate'
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(191): note: see reference to function template instantiation '_FwdIt *std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)' being compiled
          with
          [
              _FwdIt=boost::shared_ptr<void> *,
              I=boost::shared_ptr<void> *,
              _InIt=boost::shared_ptr<void> *
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: see reference to function template instantiation 'void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)' being compiled
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(178): note: see reference to function template instantiation 'void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)' being compiled
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(204): note: see reference to function template instantiation 'void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)' being compiled
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(203): note: see reference to function template instantiation 'void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)' being compiled
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: see reference to function template instantiation 'void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)' being compiled
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(296): note: see reference to function template instantiation 'void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)' being compiled
          with
          [
              T=boost::shared_ptr<void>,
              I=boost::shared_ptr<void> *
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(294): note: while compiling class template member function 'boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)'
          with
          [
              T=boost::shared_ptr<void>
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/detail/auto_buffer.hpp(302): note: see reference to function template instantiation 'boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::true_type &)' being compiled
          with
          [
              T=boost::shared_ptr<void>
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(53): note: see reference to class template instantiation 'boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>' being compiled
          with
          [
              T=boost::shared_ptr<void>
          ]
  C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/signals2/connection.hpp(55): note: see reference to class template instantiation 'boost::signals2::detail::garbage_collecting_lock<Mutex>' being compiled
  SmartVFR.vcxproj -> C:\Users\Lasanga Madushan\Desktop\SmartVFR\Build\Debug\SmartVFR.exe
